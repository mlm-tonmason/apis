/**
 * @fileoverview gRPC-Web generated client stub for mlmbox.client.management
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: mlmbox/client/management/management.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as mlmbox_client_management_management_pb from '../../../mlmbox/client/management/management_pb'; // proto import: "mlmbox/client/management/management.proto"
import * as mlmbox_types_account_pb from '../../../mlmbox/types/account_pb'; // proto import: "mlmbox/types/account.proto"
import * as mlmbox_types_management_pb from '../../../mlmbox/types/management_pb'; // proto import: "mlmbox/types/management.proto"


export class ManagementClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreate = new grpcWeb.MethodDescriptor(
    '/mlmbox.client.management.Management/Create',
    grpcWeb.MethodType.UNARY,
    mlmbox_client_management_management_pb.CreateRequest,
    mlmbox_types_management_pb.Management,
    (request: mlmbox_client_management_management_pb.CreateRequest) => {
      return request.serializeBinary();
    },
    mlmbox_types_management_pb.Management.deserializeBinary
  );

  create(
    request: mlmbox_client_management_management_pb.CreateRequest,
    metadata?: grpcWeb.Metadata | null): Promise<mlmbox_types_management_pb.Management>;

  create(
    request: mlmbox_client_management_management_pb.CreateRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: mlmbox_types_management_pb.Management) => void): grpcWeb.ClientReadableStream<mlmbox_types_management_pb.Management>;

  create(
    request: mlmbox_client_management_management_pb.CreateRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: mlmbox_types_management_pb.Management) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mlmbox.client.management.Management/Create',
        request,
        metadata || {},
        this.methodDescriptorCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mlmbox.client.management.Management/Create',
    request,
    metadata || {},
    this.methodDescriptorCreate);
  }

  methodDescriptorGet = new grpcWeb.MethodDescriptor(
    '/mlmbox.client.management.Management/Get',
    grpcWeb.MethodType.UNARY,
    mlmbox_types_management_pb.Management.Id,
    mlmbox_types_management_pb.Management,
    (request: mlmbox_types_management_pb.Management.Id) => {
      return request.serializeBinary();
    },
    mlmbox_types_management_pb.Management.deserializeBinary
  );

  get(
    request: mlmbox_types_management_pb.Management.Id,
    metadata?: grpcWeb.Metadata | null): Promise<mlmbox_types_management_pb.Management>;

  get(
    request: mlmbox_types_management_pb.Management.Id,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: mlmbox_types_management_pb.Management) => void): grpcWeb.ClientReadableStream<mlmbox_types_management_pb.Management>;

  get(
    request: mlmbox_types_management_pb.Management.Id,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: mlmbox_types_management_pb.Management) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mlmbox.client.management.Management/Get',
        request,
        metadata || {},
        this.methodDescriptorGet,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mlmbox.client.management.Management/Get',
    request,
    metadata || {},
    this.methodDescriptorGet);
  }

  methodDescriptorAll = new grpcWeb.MethodDescriptor(
    '/mlmbox.client.management.Management/All',
    grpcWeb.MethodType.UNARY,
    mlmbox_client_management_management_pb.AllRequest,
    mlmbox_types_management_pb.Management.List,
    (request: mlmbox_client_management_management_pb.AllRequest) => {
      return request.serializeBinary();
    },
    mlmbox_types_management_pb.Management.List.deserializeBinary
  );

  all(
    request: mlmbox_client_management_management_pb.AllRequest,
    metadata?: grpcWeb.Metadata | null): Promise<mlmbox_types_management_pb.Management.List>;

  all(
    request: mlmbox_client_management_management_pb.AllRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: mlmbox_types_management_pb.Management.List) => void): grpcWeb.ClientReadableStream<mlmbox_types_management_pb.Management.List>;

  all(
    request: mlmbox_client_management_management_pb.AllRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: mlmbox_types_management_pb.Management.List) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mlmbox.client.management.Management/All',
        request,
        metadata || {},
        this.methodDescriptorAll,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mlmbox.client.management.Management/All',
    request,
    metadata || {},
    this.methodDescriptorAll);
  }

  methodDescriptorUpdateInfo = new grpcWeb.MethodDescriptor(
    '/mlmbox.client.management.Management/UpdateInfo',
    grpcWeb.MethodType.UNARY,
    mlmbox_client_management_management_pb.UpdateInfoRequest,
    mlmbox_types_management_pb.Management,
    (request: mlmbox_client_management_management_pb.UpdateInfoRequest) => {
      return request.serializeBinary();
    },
    mlmbox_types_management_pb.Management.deserializeBinary
  );

  updateInfo(
    request: mlmbox_client_management_management_pb.UpdateInfoRequest,
    metadata?: grpcWeb.Metadata | null): Promise<mlmbox_types_management_pb.Management>;

  updateInfo(
    request: mlmbox_client_management_management_pb.UpdateInfoRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: mlmbox_types_management_pb.Management) => void): grpcWeb.ClientReadableStream<mlmbox_types_management_pb.Management>;

  updateInfo(
    request: mlmbox_client_management_management_pb.UpdateInfoRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: mlmbox_types_management_pb.Management) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mlmbox.client.management.Management/UpdateInfo',
        request,
        metadata || {},
        this.methodDescriptorUpdateInfo,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mlmbox.client.management.Management/UpdateInfo',
    request,
    metadata || {},
    this.methodDescriptorUpdateInfo);
  }

  methodDescriptorUpdateVisible = new grpcWeb.MethodDescriptor(
    '/mlmbox.client.management.Management/UpdateVisible',
    grpcWeb.MethodType.UNARY,
    mlmbox_client_management_management_pb.UpdateVisibleRequest,
    mlmbox_types_management_pb.Management,
    (request: mlmbox_client_management_management_pb.UpdateVisibleRequest) => {
      return request.serializeBinary();
    },
    mlmbox_types_management_pb.Management.deserializeBinary
  );

  updateVisible(
    request: mlmbox_client_management_management_pb.UpdateVisibleRequest,
    metadata?: grpcWeb.Metadata | null): Promise<mlmbox_types_management_pb.Management>;

  updateVisible(
    request: mlmbox_client_management_management_pb.UpdateVisibleRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: mlmbox_types_management_pb.Management) => void): grpcWeb.ClientReadableStream<mlmbox_types_management_pb.Management>;

  updateVisible(
    request: mlmbox_client_management_management_pb.UpdateVisibleRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: mlmbox_types_management_pb.Management) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mlmbox.client.management.Management/UpdateVisible',
        request,
        metadata || {},
        this.methodDescriptorUpdateVisible,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mlmbox.client.management.Management/UpdateVisible',
    request,
    metadata || {},
    this.methodDescriptorUpdateVisible);
  }

  methodDescriptorPartnersList = new grpcWeb.MethodDescriptor(
    '/mlmbox.client.management.Management/PartnersList',
    grpcWeb.MethodType.UNARY,
    mlmbox_client_management_management_pb.PartnersListRequest,
    mlmbox_types_account_pb.Account.Info.List,
    (request: mlmbox_client_management_management_pb.PartnersListRequest) => {
      return request.serializeBinary();
    },
    mlmbox_types_account_pb.Account.Info.List.deserializeBinary
  );

  partnersList(
    request: mlmbox_client_management_management_pb.PartnersListRequest,
    metadata?: grpcWeb.Metadata | null): Promise<mlmbox_types_account_pb.Account.Info.List>;

  partnersList(
    request: mlmbox_client_management_management_pb.PartnersListRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: mlmbox_types_account_pb.Account.Info.List) => void): grpcWeb.ClientReadableStream<mlmbox_types_account_pb.Account.Info.List>;

  partnersList(
    request: mlmbox_client_management_management_pb.PartnersListRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: mlmbox_types_account_pb.Account.Info.List) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mlmbox.client.management.Management/PartnersList',
        request,
        metadata || {},
        this.methodDescriptorPartnersList,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mlmbox.client.management.Management/PartnersList',
    request,
    metadata || {},
    this.methodDescriptorPartnersList);
  }

}

