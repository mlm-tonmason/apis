// source: mlmbox/types/quest.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var mlmbox_types_asset_pb = require('../../mlmbox/types/asset_pb.js');
goog.object.extend(proto, mlmbox_types_asset_pb);
goog.exportSymbol('proto.mlmbox.types.Quest', null, global);
goog.exportSymbol('proto.mlmbox.types.Quest.Id', null, global);
goog.exportSymbol('proto.mlmbox.types.Quest.List', null, global);
goog.exportSymbol('proto.mlmbox.types.Quest.OneTimeQuest', null, global);
goog.exportSymbol('proto.mlmbox.types.Quest.OneTimeQuest.Status', null, global);
goog.exportSymbol('proto.mlmbox.types.Quest.QuestTypeCase', null, global);
goog.exportSymbol('proto.mlmbox.types.Quest.RecurringQuest', null, global);
goog.exportSymbol('proto.mlmbox.types.Quest.RecurringQuest.Status', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Quest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.mlmbox.types.Quest.oneofGroups_);
};
goog.inherits(proto.mlmbox.types.Quest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Quest.displayName = 'proto.mlmbox.types.Quest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Quest.Id = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.types.Quest.Id, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Quest.Id.displayName = 'proto.mlmbox.types.Quest.Id';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Quest.List = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mlmbox.types.Quest.List.repeatedFields_, null);
};
goog.inherits(proto.mlmbox.types.Quest.List, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Quest.List.displayName = 'proto.mlmbox.types.Quest.List';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Quest.RecurringQuest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.types.Quest.RecurringQuest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Quest.RecurringQuest.displayName = 'proto.mlmbox.types.Quest.RecurringQuest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Quest.OneTimeQuest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.types.Quest.OneTimeQuest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Quest.OneTimeQuest.displayName = 'proto.mlmbox.types.Quest.OneTimeQuest';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.mlmbox.types.Quest.oneofGroups_ = [[3,4]];

/**
 * @enum {number}
 */
proto.mlmbox.types.Quest.QuestTypeCase = {
  QUEST_TYPE_NOT_SET: 0,
  RECURRING: 3,
  ONE_TIME: 4
};

/**
 * @return {proto.mlmbox.types.Quest.QuestTypeCase}
 */
proto.mlmbox.types.Quest.prototype.getQuestTypeCase = function() {
  return /** @type {proto.mlmbox.types.Quest.QuestTypeCase} */(jspb.Message.computeOneofCase(this, proto.mlmbox.types.Quest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Quest.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Quest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Quest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Quest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    recurring: (f = msg.getRecurring()) && proto.mlmbox.types.Quest.RecurringQuest.toObject(includeInstance, f),
    oneTime: (f = msg.getOneTime()) && proto.mlmbox.types.Quest.OneTimeQuest.toObject(includeInstance, f),
    rewardAmount: (f = msg.getRewardAmount()) && mlmbox_types_asset_pb.Asset.Amount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Quest}
 */
proto.mlmbox.types.Quest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Quest;
  return proto.mlmbox.types.Quest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Quest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Quest}
 */
proto.mlmbox.types.Quest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = new proto.mlmbox.types.Quest.RecurringQuest;
      reader.readMessage(value,proto.mlmbox.types.Quest.RecurringQuest.deserializeBinaryFromReader);
      msg.setRecurring(value);
      break;
    case 4:
      var value = new proto.mlmbox.types.Quest.OneTimeQuest;
      reader.readMessage(value,proto.mlmbox.types.Quest.OneTimeQuest.deserializeBinaryFromReader);
      msg.setOneTime(value);
      break;
    case 5:
      var value = new mlmbox_types_asset_pb.Asset.Amount;
      reader.readMessage(value,mlmbox_types_asset_pb.Asset.Amount.deserializeBinaryFromReader);
      msg.setRewardAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Quest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Quest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Quest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Quest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRecurring();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.mlmbox.types.Quest.RecurringQuest.serializeBinaryToWriter
    );
  }
  f = message.getOneTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.mlmbox.types.Quest.OneTimeQuest.serializeBinaryToWriter
    );
  }
  f = message.getRewardAmount();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      mlmbox_types_asset_pb.Asset.Amount.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Quest.Id.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Quest.Id.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Quest.Id} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Quest.Id.toObject = function(includeInstance, msg) {
  var f, obj = {
    questId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Quest.Id}
 */
proto.mlmbox.types.Quest.Id.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Quest.Id;
  return proto.mlmbox.types.Quest.Id.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Quest.Id} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Quest.Id}
 */
proto.mlmbox.types.Quest.Id.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setQuestId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Quest.Id.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Quest.Id.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Quest.Id} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Quest.Id.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuestId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 quest_id = 1;
 * @return {number}
 */
proto.mlmbox.types.Quest.Id.prototype.getQuestId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Quest.Id} returns this
 */
proto.mlmbox.types.Quest.Id.prototype.setQuestId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mlmbox.types.Quest.List.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Quest.List.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Quest.List.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Quest.List} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Quest.List.toObject = function(includeInstance, msg) {
  var f, obj = {
    questsList: jspb.Message.toObjectList(msg.getQuestsList(),
    proto.mlmbox.types.Quest.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Quest.List}
 */
proto.mlmbox.types.Quest.List.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Quest.List;
  return proto.mlmbox.types.Quest.List.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Quest.List} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Quest.List}
 */
proto.mlmbox.types.Quest.List.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mlmbox.types.Quest;
      reader.readMessage(value,proto.mlmbox.types.Quest.deserializeBinaryFromReader);
      msg.addQuests(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Quest.List.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Quest.List.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Quest.List} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Quest.List.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuestsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mlmbox.types.Quest.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Quest quests = 1;
 * @return {!Array<!proto.mlmbox.types.Quest>}
 */
proto.mlmbox.types.Quest.List.prototype.getQuestsList = function() {
  return /** @type{!Array<!proto.mlmbox.types.Quest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mlmbox.types.Quest, 1));
};


/**
 * @param {!Array<!proto.mlmbox.types.Quest>} value
 * @return {!proto.mlmbox.types.Quest.List} returns this
*/
proto.mlmbox.types.Quest.List.prototype.setQuestsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mlmbox.types.Quest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mlmbox.types.Quest}
 */
proto.mlmbox.types.Quest.List.prototype.addQuests = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mlmbox.types.Quest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mlmbox.types.Quest.List} returns this
 */
proto.mlmbox.types.Quest.List.prototype.clearQuestsList = function() {
  return this.setQuestsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Quest.RecurringQuest.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Quest.RecurringQuest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Quest.RecurringQuest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Quest.RecurringQuest.toObject = function(includeInstance, msg) {
  var f, obj = {
    nextAvailableAt: jspb.Message.getFieldWithDefault(msg, 1, 0),
    lastCompletedAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    status: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Quest.RecurringQuest}
 */
proto.mlmbox.types.Quest.RecurringQuest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Quest.RecurringQuest;
  return proto.mlmbox.types.Quest.RecurringQuest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Quest.RecurringQuest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Quest.RecurringQuest}
 */
proto.mlmbox.types.Quest.RecurringQuest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNextAvailableAt(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLastCompletedAt(value);
      break;
    case 3:
      var value = /** @type {!proto.mlmbox.types.Quest.RecurringQuest.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Quest.RecurringQuest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Quest.RecurringQuest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Quest.RecurringQuest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Quest.RecurringQuest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNextAvailableAt();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getLastCompletedAt();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.mlmbox.types.Quest.RecurringQuest.Status = {
  WAITING: 0,
  AVAILABLE: 1,
  COMPLETED: 2
};

/**
 * optional uint32 next_available_at = 1;
 * @return {number}
 */
proto.mlmbox.types.Quest.RecurringQuest.prototype.getNextAvailableAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Quest.RecurringQuest} returns this
 */
proto.mlmbox.types.Quest.RecurringQuest.prototype.setNextAvailableAt = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 last_completed_at = 2;
 * @return {number}
 */
proto.mlmbox.types.Quest.RecurringQuest.prototype.getLastCompletedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Quest.RecurringQuest} returns this
 */
proto.mlmbox.types.Quest.RecurringQuest.prototype.setLastCompletedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Status status = 3;
 * @return {!proto.mlmbox.types.Quest.RecurringQuest.Status}
 */
proto.mlmbox.types.Quest.RecurringQuest.prototype.getStatus = function() {
  return /** @type {!proto.mlmbox.types.Quest.RecurringQuest.Status} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.mlmbox.types.Quest.RecurringQuest.Status} value
 * @return {!proto.mlmbox.types.Quest.RecurringQuest} returns this
 */
proto.mlmbox.types.Quest.RecurringQuest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Quest.OneTimeQuest.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Quest.OneTimeQuest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Quest.OneTimeQuest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Quest.OneTimeQuest.toObject = function(includeInstance, msg) {
  var f, obj = {
    verificationUrl: jspb.Message.getFieldWithDefault(msg, 1, ""),
    checkedAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    status: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Quest.OneTimeQuest}
 */
proto.mlmbox.types.Quest.OneTimeQuest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Quest.OneTimeQuest;
  return proto.mlmbox.types.Quest.OneTimeQuest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Quest.OneTimeQuest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Quest.OneTimeQuest}
 */
proto.mlmbox.types.Quest.OneTimeQuest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVerificationUrl(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCheckedAt(value);
      break;
    case 3:
      var value = /** @type {!proto.mlmbox.types.Quest.OneTimeQuest.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Quest.OneTimeQuest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Quest.OneTimeQuest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Quest.OneTimeQuest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Quest.OneTimeQuest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVerificationUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCheckedAt();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.mlmbox.types.Quest.OneTimeQuest.Status = {
  NOT_STARTED: 0,
  PENDING_REVIEW: 1,
  COMPLETED: 2,
  FAILED: 3
};

/**
 * optional string verification_url = 1;
 * @return {string}
 */
proto.mlmbox.types.Quest.OneTimeQuest.prototype.getVerificationUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.Quest.OneTimeQuest} returns this
 */
proto.mlmbox.types.Quest.OneTimeQuest.prototype.setVerificationUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 checked_at = 2;
 * @return {number}
 */
proto.mlmbox.types.Quest.OneTimeQuest.prototype.getCheckedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Quest.OneTimeQuest} returns this
 */
proto.mlmbox.types.Quest.OneTimeQuest.prototype.setCheckedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Status status = 3;
 * @return {!proto.mlmbox.types.Quest.OneTimeQuest.Status}
 */
proto.mlmbox.types.Quest.OneTimeQuest.prototype.getStatus = function() {
  return /** @type {!proto.mlmbox.types.Quest.OneTimeQuest.Status} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.mlmbox.types.Quest.OneTimeQuest.Status} value
 * @return {!proto.mlmbox.types.Quest.OneTimeQuest} returns this
 */
proto.mlmbox.types.Quest.OneTimeQuest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.mlmbox.types.Quest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Quest} returns this
 */
proto.mlmbox.types.Quest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.mlmbox.types.Quest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.Quest} returns this
 */
proto.mlmbox.types.Quest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional RecurringQuest recurring = 3;
 * @return {?proto.mlmbox.types.Quest.RecurringQuest}
 */
proto.mlmbox.types.Quest.prototype.getRecurring = function() {
  return /** @type{?proto.mlmbox.types.Quest.RecurringQuest} */ (
    jspb.Message.getWrapperField(this, proto.mlmbox.types.Quest.RecurringQuest, 3));
};


/**
 * @param {?proto.mlmbox.types.Quest.RecurringQuest|undefined} value
 * @return {!proto.mlmbox.types.Quest} returns this
*/
proto.mlmbox.types.Quest.prototype.setRecurring = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.mlmbox.types.Quest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.types.Quest} returns this
 */
proto.mlmbox.types.Quest.prototype.clearRecurring = function() {
  return this.setRecurring(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.types.Quest.prototype.hasRecurring = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional OneTimeQuest one_time = 4;
 * @return {?proto.mlmbox.types.Quest.OneTimeQuest}
 */
proto.mlmbox.types.Quest.prototype.getOneTime = function() {
  return /** @type{?proto.mlmbox.types.Quest.OneTimeQuest} */ (
    jspb.Message.getWrapperField(this, proto.mlmbox.types.Quest.OneTimeQuest, 4));
};


/**
 * @param {?proto.mlmbox.types.Quest.OneTimeQuest|undefined} value
 * @return {!proto.mlmbox.types.Quest} returns this
*/
proto.mlmbox.types.Quest.prototype.setOneTime = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.mlmbox.types.Quest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.types.Quest} returns this
 */
proto.mlmbox.types.Quest.prototype.clearOneTime = function() {
  return this.setOneTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.types.Quest.prototype.hasOneTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Asset.Amount reward_amount = 5;
 * @return {?proto.mlmbox.types.Asset.Amount}
 */
proto.mlmbox.types.Quest.prototype.getRewardAmount = function() {
  return /** @type{?proto.mlmbox.types.Asset.Amount} */ (
    jspb.Message.getWrapperField(this, mlmbox_types_asset_pb.Asset.Amount, 5));
};


/**
 * @param {?proto.mlmbox.types.Asset.Amount|undefined} value
 * @return {!proto.mlmbox.types.Quest} returns this
*/
proto.mlmbox.types.Quest.prototype.setRewardAmount = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.types.Quest} returns this
 */
proto.mlmbox.types.Quest.prototype.clearRewardAmount = function() {
  return this.setRewardAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.types.Quest.prototype.hasRewardAmount = function() {
  return jspb.Message.getField(this, 5) != null;
};


goog.object.extend(exports, proto.mlmbox.types);
